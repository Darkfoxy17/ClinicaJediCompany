// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppChamadosTI.Data;

#nullable disable

namespace ClinicaJediCompany.Migrations
{
    [DbContext(typeof(BancoDados))]
    [Migration("20250723055158_versao1")]
    partial class versao1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StatusAgendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusAgendamentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("DentistaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedimentoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusAgendamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DentistaId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProcedimentoId");

                    b.HasIndex("StatusAgendamentoId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.ContaViewModel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ContaViewModel");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Dentista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EspecializacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspecializacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Dentistas");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.DentistaProcedimento", b =>
                {
                    b.Property<int>("DentistaId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedimentoId")
                        .HasColumnType("int");

                    b.HasKey("DentistaId", "ProcedimentoId");

                    b.HasIndex("ProcedimentoId");

                    b.ToTable("DentistaProcedimentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Especializacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especializacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Clínico Geral"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Endodontia"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ortodontia"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Implantodontia"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Odontopediatria"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Periodontia"
                        });
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.EspecializacaoProcedimento", b =>
                {
                    b.Property<int>("EspecializacaoId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedimentoId")
                        .HasColumnType("int");

                    b.HasKey("EspecializacaoId", "ProcedimentoId");

                    b.HasIndex("ProcedimentoId");

                    b.ToTable("EspecializacoesProcedimentos");

                    b.HasData(
                        new
                        {
                            EspecializacaoId = 1,
                            ProcedimentoId = 1
                        },
                        new
                        {
                            EspecializacaoId = 1,
                            ProcedimentoId = 2
                        },
                        new
                        {
                            EspecializacaoId = 1,
                            ProcedimentoId = 4
                        },
                        new
                        {
                            EspecializacaoId = 1,
                            ProcedimentoId = 5
                        },
                        new
                        {
                            EspecializacaoId = 2,
                            ProcedimentoId = 3
                        },
                        new
                        {
                            EspecializacaoId = 3,
                            ProcedimentoId = 6
                        },
                        new
                        {
                            EspecializacaoId = 3,
                            ProcedimentoId = 7
                        },
                        new
                        {
                            EspecializacaoId = 4,
                            ProcedimentoId = 8
                        },
                        new
                        {
                            EspecializacaoId = 4,
                            ProcedimentoId = 9
                        },
                        new
                        {
                            EspecializacaoId = 5,
                            ProcedimentoId = 10
                        },
                        new
                        {
                            EspecializacaoId = 6,
                            ProcedimentoId = 11
                        },
                        new
                        {
                            EspecializacaoId = 6,
                            ProcedimentoId = 12
                        });
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Procedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DentistaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DentistaId");

                    b.ToTable("Procedimentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Avaliação"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Limpeza"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Canal"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Extração"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Clareamento"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Aparelho Ortodôntico"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Manutenção de Aparelho"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Implante Dentário"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Prótese"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Atendimento Infantil"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Raspagem"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Cirurgia Gengival"
                        });
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.RegistroViewModel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("RegistroViewModel");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Agendamento", b =>
                {
                    b.HasOne("WebAppChamadosTI.Models.Dentista", "Dentista")
                        .WithMany("Agendamentos")
                        .HasForeignKey("DentistaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAppChamadosTI.Models.Paciente", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAppChamadosTI.Models.Procedimento", "Procedimento")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ProcedimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StatusAgendamento", "StatusAgendamento")
                        .WithMany("Agendamentos")
                        .HasForeignKey("StatusAgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dentista");

                    b.Navigation("Paciente");

                    b.Navigation("Procedimento");

                    b.Navigation("StatusAgendamento");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Dentista", b =>
                {
                    b.HasOne("WebAppChamadosTI.Models.Especializacao", "Especializacao")
                        .WithMany()
                        .HasForeignKey("EspecializacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppChamadosTI.Models.Usuario", "Usuario")
                        .WithMany("Dentistas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especializacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.DentistaProcedimento", b =>
                {
                    b.HasOne("WebAppChamadosTI.Models.Dentista", "Dentista")
                        .WithMany("DentistaProcedimentos")
                        .HasForeignKey("DentistaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAppChamadosTI.Models.Procedimento", "Procedimento")
                        .WithMany("DentistaProcedimentos")
                        .HasForeignKey("ProcedimentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dentista");

                    b.Navigation("Procedimento");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.EspecializacaoProcedimento", b =>
                {
                    b.HasOne("WebAppChamadosTI.Models.Especializacao", "Especializacao")
                        .WithMany("EspecializacaoProcedimentos")
                        .HasForeignKey("EspecializacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAppChamadosTI.Models.Procedimento", "Procedimento")
                        .WithMany("EspecializacaoProcedimentos")
                        .HasForeignKey("ProcedimentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Especializacao");

                    b.Navigation("Procedimento");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Paciente", b =>
                {
                    b.HasOne("WebAppChamadosTI.Models.Usuario", "Usuario")
                        .WithMany("Pacientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Procedimento", b =>
                {
                    b.HasOne("WebAppChamadosTI.Models.Dentista", null)
                        .WithMany("Procedimentos")
                        .HasForeignKey("DentistaId");
                });

            modelBuilder.Entity("StatusAgendamento", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Dentista", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("DentistaProcedimentos");

                    b.Navigation("Procedimentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Especializacao", b =>
                {
                    b.Navigation("EspecializacaoProcedimentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Paciente", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Procedimento", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("DentistaProcedimentos");

                    b.Navigation("EspecializacaoProcedimentos");
                });

            modelBuilder.Entity("WebAppChamadosTI.Models.Usuario", b =>
                {
                    b.Navigation("Dentistas");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
